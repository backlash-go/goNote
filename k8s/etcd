






下载 cfSSL 工具
https://pkg.cfssl.org/R1.2/cfssl_linux-amd64

https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64

https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64


1:
curl -L https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -o /usr/local/bin/cfssl
curl -L https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -o /usr/local/bin/cfssljson
curl -L https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -o /usr/local/bin/cfssl-certinfo
chmod +x /usr/local/bin/cfssl /usr/local/bin/cfssljson /usr/local/bin/cfssl-certinfo


# cat ca-config.json
{
"signing": {
    "default": {
      "expiry": "87600h"
    },
    "profiles": {
      "www": {
         "expiry": "87600h",
         "usages": [
            "signing",
            "key encipherment",
            "server auth",
            "client auth"
        ]
      }
    }
  }
}




# cat ca-csr.json
{
  "CN": "etcd CA",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "CN",
      "L": "Beijing",
      "ST": "Beijing"
    }
  ]
}


# cat server-csr.json
{
  "CN": "etcd",
  "hosts": [
    "192.168.31.63",
    "192.168.31.65",
    "192.168.31.66"
  ],
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "CN",
      "L": "BeiJing",
      "ST": "BeiJing"
    }
  ]
}


生成证书:
cfssl gencert -initca ca-csr.json | cfssljson -bare ca -
cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=www server-csr.json | cfssljson -bare server
# ls *pem
ca-key.pem  ca.pem  server-key.pem  server.pem



# mkdir /opt/etcd/{bin,cfg,ssl} -p
# tar zxvf etcd-v3.2.12-linux-amd64.tar.gz
# mv etcd-v3.2.12-linux-amd64/{etcd,etcdctl} /opt/etcd/bin/


https://github.com/etcd-io/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz



cat etcd.service
[Unit]
Description=etcd service
After=network.target

[Service]
#Type=notify
WorkingDirectory=/var/lib/etcd/
User=etcd
ExecStart=/usr/bin/etcd --election-timeout=3000 	--heartbeat-interval=500 	--snapshot-count=50000 	--data-dir=data.etcd --name 172.18.0.147-name-1 	--client-cert-auth --trusted-ca-file=/var/lib/etcd/cert/ca.pem 	--cert-file=/var/lib/etcd/cert/etcd-server.pem --key-file=/var/lib/etcd/cert/etcd-server-key.pem 	--peer-client-cert-auth --peer-trusted-ca-file=/var/lib/etcd/cert/peer-ca.pem 	--peer-cert-file=/var/lib/etcd/cert/172.18.0.147-name-1.pem --peer-key-file=/var/lib/etcd/cert/172.18.0.147-name-1-key.pem 	--initial-advertise-peer-urls https://172.18.0.147:2380 --listen-peer-urls https://172.18.0.147:2380 	--advertise-client-urls https://172.18.0.147:2379 --listen-client-urls https://172.18.0.147:2379 	--initial-cluster 172.18.0.147-name-1=https://172.18.0.147:2380,172.18.214.192-name-2=https://172.18.214.192:2380,172.18.214.193-name-3=https://172.18.214.193:2380 	--initial-cluster-state new --initial-cluster-token 3411d3e3-7b4f-48d9-892c-8192eab439fb
LimitNOFILE=65536
Restart=always
RestartSec=15s
OOMScoreAdjust=-999

[Install]
WantedBy=multi-user.target






//
etcd --data-dir=/home/bob/etcd-v3.4.11-linux-arm64/data-etcd --name etcd01 \
	--initial-advertise-peer-urls http://172.18.214.174:2380 --listen-peer-urls http://172.18.214.174:2380 \
	--advertise-client-urls http://172.18.214.174:2379 --listen-client-urls http://172.18.214.174:2379 &


//access etcd on kubernetes
etcdctl --endpoints=https://172.18.214.214:2379 member list --cacert=/etc/kubernetes/pki/etcd/ca.pem  --key=/etc/kubernetes/pki/etcd/etcd-client-key.pem --cert=/etc/kubernetes/pki/etcd/etcd-client.pem

etcdctl --endpoints=https://172.18.214.214:2379   --cacert=/etc/kubernetes/pki/etcd/ca.pem  --key=/etc/kubernetes/pki/etcd/etcd-client-key.pem --cert=/etc/kubernetes/pki/etcd/etcd-client.pem

/registry/statefulsets/default/web

getetcd --prefix --keys-only=true get /registry/deployment
getetcd get /registry/replicasets/default/nginx-deployment-84d5f958df -w json | jq

/apis/batch/v2alpha1/CronJob


username   hxx                     #linux服务器用户hxx
  pass       H1sVs8hx7E2xs2         #hxx  密码
  host       47.112.119.49           #linux服务器地址


  dbhost     rr-wz923i0g7ggcbt4pp.mysql.rds.aliyuncs.com          #数据库地址
  dbname     read_data_go                 #数据库用户
  dbpass     RT93b41966cea8            #密码